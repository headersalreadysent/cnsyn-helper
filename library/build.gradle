plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id "org.jetbrains.kotlin.android"
    id("org.jetbrains.kotlin.plugin.compose")

}

// Allow overriding the artifact version from the command line or environment.
// Usage: ./gradlew :library:publish -PreleaseVersion=1.2.3
// or set RELEASE_VERSION in the environment in CI.
def defaultVersion = '1.0'
group = 'co.ec.helper'
version = project.hasProperty('releaseVersion') ? project.property('releaseVersion') : (System.getenv('RELEASE_VERSION') ?: defaultVersion)

// GitHub Packages configuration: prefers env vars set by GitHub Actions, then project properties, then a placeholder
// When running locally, set `gpr.repo` (owner/repo), `gpr.user` and `gpr.key` in ~/.gradle/gradle.properties or replace OWNER/REPO below.
def githubRepo = System.getenv('GITHUB_REPOSITORY') ?: project.findProperty('gpr.repo') ?: 'OWNER/REPO'
def githubUser = System.getenv('GITHUB_ACTOR') ?: project.findProperty('gpr.user')
def githubToken = System.getenv('GITHUB_TOKEN') ?: project.findProperty('gpr.key')

android {

    compileSdk = 34
    namespace "co.ec.helper"
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 2
        versionName "1.1.0"
    }

    buildFeatures {
        compose = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}
composeCompiler {
    reportsDestination = layout.buildDirectory.dir("compose_compiler")
}
dependencies {

    implementation("androidx.compose.compiler:compiler:1.5.15")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation(platform("androidx.compose:compose-bom:2025.01.01"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
}

afterEvaluate {
    publishing {
        repositories {
            // Publish to GitHub Packages. In Actions, GITHUB_REPOSITORY has the form owner/repo.
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/${githubRepo}")
                credentials {
                    username = githubUser
                    password = githubToken
                }
            }
        }
        publications {
            // Creates a Maven publication called "release" from the Android component.
            release(MavenPublication) {
                from components.release
                // Use project coordinates so they are easy to manage in one place
                groupId = project.group
                artifactId = 'cnsyn-helper'
                version = project.version

                // Minimal POM metadata (helps with package discoverability)
                pom {
                    name = 'cnsyn-helper'
                    description = 'A small Android Compose helper library.'
                    url = "https://github.com/${githubRepo}"
                    licenses {
                        license {
                            name = 'The MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'can'
                            name = 'Can'
                            email = 'you@example.com'
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/${githubRepo}.git"
                        developerConnection = "scm:git:ssh://github.com/${githubRepo}.git"
                        url = "https://github.com/${githubRepo}"
                    }
                }
            }
        }
    }
}
